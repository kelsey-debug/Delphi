<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1430"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <PreActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# Type a script or drag a script file from your workspace to insert its path.&#10;configFilePath=&quot;${SRCROOT}/Delphi/Config.xcconfig&quot;&#10;&gt; $configFilePath&#10;cat &quot;${SRCROOT}/.env&quot; &gt;&gt; $configFilePath&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "F059E1722A8D6A9A002777A3"
                     BuildableName = "Delphi.app"
                     BlueprintName = "Delphi"
                     ReferencedContainer = "container:Delphi.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# Type a script or drag a script file from your workspace to insert its path.&#10;xcconfigFile=&quot;${SRCROOT}/Delphi/Config.xcconfig&quot;&#10;plistFile=&quot;${SRCROOT}/Delphi/Auth0.plist&quot;&#10;&#10;# Read the values from the .xcconfig file&#10;clientID=$(grep &apos;AUTH0_CLIENT_ID&apos; &quot;$xcconfigFile&quot; | head -n 1 | awk -F= &apos;{gsub(/ /, &quot;&quot;, $NF); print $NF}&apos;)&#10;clientDomain=$(grep &apos;AUTH0_DOMAIN&apos; &quot;$xcconfigFile&quot; | head -n 1 | awk -F= &apos;{gsub(/ /, &quot;&quot;, $NF); print $NF}&apos;)&#10;&#10;# Write the values to the .plist file&#10;defaults write &quot;$plistFile&quot; ClientId &quot;$clientID&quot;&#10;defaults write &quot;$plistFile&quot; Domain &quot;$clientDomain&quot;&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "F059E1722A8D6A9A002777A3"
                     BuildableName = "Delphi.app"
                     BlueprintName = "Delphi"
                     ReferencedContainer = "container:Delphi.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PreActions>
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "F059E1722A8D6A9A002777A3"
               BuildableName = "Delphi.app"
               BlueprintName = "Delphi"
               ReferencedContainer = "container:Delphi.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      shouldAutocreateTestPlan = "YES">
      <Testables>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "F059E1822A8D6A9B002777A3"
               BuildableName = "DelphiTests.xctest"
               BlueprintName = "DelphiTests"
               ReferencedContainer = "container:Delphi.xcodeproj">
            </BuildableReference>
         </TestableReference>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "F059E18C2A8D6A9B002777A3"
               BuildableName = "DelphiUITests.xctest"
               BlueprintName = "DelphiUITests"
               ReferencedContainer = "container:Delphi.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "F059E1722A8D6A9A002777A3"
            BuildableName = "Delphi.app"
            BlueprintName = "Delphi"
            ReferencedContainer = "container:Delphi.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "F059E1722A8D6A9A002777A3"
            BuildableName = "Delphi.app"
            BlueprintName = "Delphi"
            ReferencedContainer = "container:Delphi.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>
